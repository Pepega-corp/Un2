<UserControl
    x:Class="Unicon2.Fragments.Configuration.Editor.View.ConfigurationEditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:Unicon2.Fragments.Configuration.Editor.Behaviors"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converter="clr-namespace:Unicon2.SharedResources.Converter;assembly=Unicon2.SharedResources"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Unicon2.Fragments.Configuration.Editor.ViewModels"
    controls:DialogParticipation.Register="{Binding}"
    d:DataContext="{d:DesignInstance viewModels:ConfigurationEditorViewModel}"
    d:DesignHeight="500"
    d:DesignWidth="900"
    lex:LocalizeDictionary.DesignCulture="ru-RU"
    lex:ResxLocalizationProvider.DefaultAssembly="Unicon2.Localization"
    lex:ResxLocalizationProvider.DefaultDictionary="Resources"
    IsTabStop="False"
    mc:Ignorable="d">
    <UserControl.InputBindings>
        <KeyBinding
            Key="E"
            Command="{Binding EditCommand}"
            Modifiers="Control" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <ResourceDictionary Source="../Resources/DeviceStructDataTemplates.xaml" />
    </UserControl.Resources>

    <Grid
        Name="ConfigurationStackPanel"
        Margin="0"
        HorizontalAlignment="Stretch">
        <Grid.Resources>
            <converter:BoolToVisConverter x:Key="BoolToVisConverter" />
            <converter:BoolToVisConverter x:Key="BoolToInVisConverter" Invert="True" />
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Margin="0">
            <GroupBox
                Margin="0"
                Header="{lex:Loc General}"
                IsTabStop="False">
                <StackPanel Orientation="Vertical">
                    <Button
                        Margin="3"
                        Command="{Binding AddRootGroupElementCommand}"
                        Content="{lex:Loc AddGroupElementRoot}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />
                    <Button
                        Margin="3"
                        Command="{Binding AddRootElementCommand}"
                        Content="{lex:Loc AddElementRoot}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            Margin="3"
                            Command="{Binding OpenConfigurationSettingsCommand}"
                            Content="{lex:Loc Settings}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <Button
                            Grid.Column="1"
                            Margin="3"
                            Command="{Binding OpenBasicValuesCommand}"
                            Content="{lex:Loc BasicValues}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <Button
                            Grid.Column="2"
                            Margin="3"
                            Command="{Binding MigrateComplexPropertiesCommand}"
                            Content=" &gt; "
                            IsEnabled="True"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}"
                            ToolTip="Мигрировать составные свойства в свойства с выбранными битами" />
                    </Grid>
                </StackPanel>
            </GroupBox>

            <GroupBox
                Margin="0"
                Header="{lex:Loc CurrentItem}"
                IsTabStop="False"
                Visibility="{Binding IsMultiEditMode, Converter={StaticResource BoolToInVisConverter}}">
                <StackPanel Margin="0">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            Grid.Column="0"
                            Margin="3"
                            Command="{Binding SetElementUpCommand}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}">
                            <Rectangle
                                Width="18"
                                Height="15"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_arrow_up}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                        <Button
                            Name="EditElementButton"
                            Grid.Column="1"
                            Margin="3"
                            HorizontalAlignment="Stretch"
                            Command="{Binding EditElementCommand}"
                            Content="{lex:Loc Edit}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <Button
                            Grid.Column="2"
                            Margin="3"
                            Command="{Binding SetElementDownCommand}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}">
                            <Rectangle
                                Width="18"
                                Height="15"
                                Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}">
                                <Rectangle.OpacityMask>
                                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_arrow_down}" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Button>
                    </Grid>

                    <controls:SplitButton
                        Name="AddingElementSplitButton"
                        Margin="4"
                        BorderBrush="{DynamicResource MahApps.Brushes.Accent3}"
                        Command="{Binding ElementName=AddingElementSplitButton, Path=SelectedItem.AddingCommand}"
                        IsEnabled="True"
                        IsTabStop="False"
                        ItemsSource="{Binding ElementsAddingCommandCollectionFiltered}"
                        SelectedIndex="0"
                        SelectedItem="{Binding SelectedElementsAddingCommand}">
                        <controls:SplitButton.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding ElementName=AddingElementNameProxy, Path=Result}" />
                                    <lex:LocProxy Name="AddingElementNameProxy" Source="{Binding Name}" />
                                </Grid>
                            </DataTemplate>
                        </controls:SplitButton.ItemTemplate>
                    </controls:SplitButton>

                    <Button
                        Margin="3"
                        Command="{Binding DeleteElementCommand}"
                        Content="{lex:Loc Delete}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />

                    <UniformGrid Columns="3">

                        <Button
                            Margin="3"
                            Command="{Binding CutElementCommand}"
                            Content="{lex:Loc Cut}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />

                        <Button
                            Margin="3"
                            Command="{Binding CopyElementCommand}"
                            Content="{lex:Loc Copy}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />

                        <Button
                            Margin="3"
                            Command="{Binding PasteAsChildElementCommand}"
                            Content="{lex:Loc Paste}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}"
                            ToolTip="{lex:Loc PasteAsChild}" />
                    </UniformGrid>

                    <Button
                        Margin="3"
                        Command="{Binding ShowFormatterParametersCommand}"
                        Content="{lex:Loc FormatterParameters}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />
                    <UniformGrid Columns="2">
                        <ToggleButton
                            Margin="3"
                            Content="{lex:Loc MeasureUnit}"
                            IsChecked="{Binding SelectedRow.IsMeasureUnitEnabled}"
                            IsEnabled="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=IMeasurable}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconToggleButtonStyle}" />
                        <ToggleButton
                            Margin="3"
                            Content="{lex:Loc Range}"
                            IsChecked="{Binding SelectedRow.IsRangeEnabled}"
                            IsEnabled="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=IRangeableViewModel}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconToggleButtonStyle}" />
                    </UniformGrid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Button
                            Grid.Column="0"
                            Margin="3"
                            Command="{Binding AddSelectedElementAsResourceCommand}"
                            Content="{lex:Loc AddAsResource}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />

                        <Button
                            Name="additionalSettingsButton"
                            Grid.Column="1"
                            Margin="3"
                            Command="{Binding TriggerAdditionalSettingsCommand}"
                            Content=" ... "
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <Popup
                            IsOpen="{Binding IsAdditionalSettingsOpened}"
                            Placement="Mouse"
                            StaysOpen="False">
                            <Border
                                Background="White"
                                BorderBrush="Black"
                                BorderThickness="1">
                                <StackPanel Margin="10">
                                    <StackPanel Orientation="Horizontal" Visibility="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IPropertyEditorViewModel}">
                                        <TextBlock Margin="5" Text="{lex:Loc WriteFunction}" />
                                        <TextBox IsTabStop="False" Text="{Binding SelectedRow.NumberOfWriteFunction}" />
                                    </StackPanel>
                                    <Button
                                        Margin="3"
                                        Command="{Binding EditDescriptionCommand}"
                                        Content="{lex:Loc EditDescription}"
                                        IsTabStop="False"
                                        Style="{DynamicResource UniconButtonStyle}"
                                        Visibility="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IPropertyEditorViewModel}" />
                                    <Grid VerticalAlignment="Bottom" Visibility="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IPropertyEditorViewModel}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="5"
                                            Text="{lex:Loc Dependencies}" />
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="5"
                                            Text=":" />
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Margin="20,5,5,5"
                                            Text="{Binding SelectedRow.DependencyViewModels.Count}" />
                                        <Button
                                            Grid.Row="0"
                                            Grid.Column="3"
                                            Width="200"
                                            Height="30"
                                            Command="{Binding ShowDependenciesCommand}"
                                            Content="{lex:Loc Show}"
                                            IsTabStop="False"
                                            Style="{DynamicResource UniconButtonStyle}" />
                                    </Grid>
                                    <Grid VerticalAlignment="Bottom" Visibility="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IConfigurationGroupEditorViewModel}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Margin="5"
                                            Text="{lex:Loc Filters}" />
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Margin="5"
                                            Text=":" />
                                        <TextBlock
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            Margin="20,5,5,5"
                                            Text="{Binding SelectedRow.FilterViewModels.Count}" />
                                        <Button
                                            Grid.Row="0"
                                            Grid.Column="3"
                                            Width="200"
                                            Height="30"
                                            Command="{Binding ShowFiltersCommand}"
                                            Content="{lex:Loc Show}"
                                            IsTabStop="False"
                                            Style="{DynamicResource UniconButtonStyle}" />
                                    </Grid>
                                    <Grid VerticalAlignment="Bottom" Visibility="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IConfigurationGroupEditorViewModel}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Button
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            Height="30"
                                            Command="{Binding ImportPropertiesFromExcelTypeACommand}"
                                            Content="{lex:Loc ImportPropertiesFromExcelTypeAHeader}"
                                            IsTabStop="False"
                                            Style="{DynamicResource UniconButtonStyle}" />
                                        <Rectangle
                                            Grid.Column="1"
                                            Width="15"
                                            Height="15"
                                            Margin="5"
                                            Fill="Gray"
                                            ToolTipService.ShowDuration="15000">
                                            <Rectangle.ToolTip>
                                                <ToolTip>
                                                    <TextBlock
                                                        MaxWidth="200"
                                                        Text="{lex:Loc ImportPropertiesFromExcelTypeADescription}"
                                                        TextWrapping="Wrap" />
                                                </ToolTip>

                                            </Rectangle.ToolTip>
                                            <Rectangle.OpacityMask>
                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_information_circle}" />
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                    <UniformGrid Columns="2" Rows="2">
                        <Button
                            Margin="3"
                            Command="{Binding IncreaseAddressCommand}"
                            Content="{lex:Loc IncreaseAddress}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />

                        <Button
                            Margin="3"
                            Command="{Binding DecreaseAddressCommand}"
                            Content="{lex:Loc DecreaseAddress}"
                            IsTabStop="False"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <TextBlock
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{lex:Loc AddressIterator}" />
                        <TextBox
                            Margin="3"
                            IsTabStop="False"
                            Text="{Binding AddressIteratorValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                    <UniformGrid
                        Columns="2"
                        IsEnabled="{Binding SelectedRow, Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=ICanBeHidden}"
                        Rows="2">
                        <TextBlock
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{lex:Loc Hidden}" />
                        <CheckBox Margin="3" IsChecked="{Binding SelectedRow.IsHidden, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{lex:Loc GroupWithReiteration}" />
                        <CheckBox Margin="3" IsChecked="{Binding SelectedRow.IsGroupWithReiteration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </StackPanel>
            </GroupBox>

            <GroupBox
                Margin="0"
                Header="{lex:Loc CurrentItem}"
                IsTabStop="False"
                Visibility="{Binding IsMultiEditMode, Converter={StaticResource BoolToVisConverter}}">
                <StackPanel Margin="0">
                    <Button
                        Margin="3"
                        Command="{Binding DeleteElementCommand}"
                        Content="{lex:Loc Delete}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />

                    <Button
                        Margin="3"
                        Command="{Binding ShowFormatterParametersCommand}"
                        Content="{lex:Loc FormatterParameters}"
                        IsTabStop="False"
                        Style="{DynamicResource UniconButtonStyle}" />

                    <UniformGrid Columns="2" Rows="3">
                        <Button
                            Margin="3"
                            Command="{Binding IncreaseAddressCommand}"
                            Content="{lex:Loc IncreaseAddress}"
                            Style="{DynamicResource UniconButtonStyle}" />

                        <Button
                            Margin="3"
                            Command="{Binding DecreaseAddressCommand}"
                            Content="{lex:Loc DecreaseAddress}"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <TextBlock
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Text="{lex:Loc AddressIterator}" />
                        <TextBox Margin="3" Text="{Binding AddressIteratorValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Button
                            Margin="3"
                            Command="{Binding AddDependencyToManyProps}"
                            Content="{lex:Loc AddDependency}"
                            Style="{DynamicResource UniconButtonStyle}" />
                        <!--<CheckBox IsThreeState="True" IsEnabled="{Binding SetIsFromBitsToManyPropsViewModel.IsEnabled}" ToolTip=""></CheckBox>-->
                    </UniformGrid>

                </StackPanel>
            </GroupBox>



        </StackPanel>

        <Grid Name="ConfigGrid" Grid.Column="1">
            <Grid
                Name="dummygrid"
                Width="{Binding ElementName=ConfigGrid, Path=ActualWidth}"
                Visibility="Hidden">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.6*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.4*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.2*" />
                    <ColumnDefinition Width="0.1*" />

                </Grid.ColumnDefinitions>

                <Border Name="dummywidthName" Grid.Column="0" />
                <Border Name="dummywidthType" Grid.Column="1" />
                <Border Name="dummywidthAdress" Grid.Column="2" />
                <Border Name="dummywidthNumberOfPoints" Grid.Column="3" />
                <Border Name="dummywidthFormatting" Grid.Column="4" />
                <Border Name="dummywidthMeasureUnit" Grid.Column="5" />
                <Border Name="dummywidthRange" Grid.Column="6" />
                <Border Name="dummywidthTableViewAllowed" Grid.Column="7" />

            </Grid>

            <ListView
                Name="ConfigListView"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                AlternationCount="2"
                BorderThickness="0"
                ItemsSource="{Binding Path=AllRows}"
                SelectedItem="{Binding Path=SelectedRow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <b:InvokeCommandAction Command="{Binding OnSelectionChangedCommand}" CommandParameter="{Binding ElementName=ConfigListView, Path=SelectedItems}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ListView.Resources>
                    <ContextMenu x:Key="ItemContextMenu">
                        <!--  свойство ниже ломает контекстное меню, пока убрал условие, надо уточнить, как оно должно работать  -->
                        <!--  IsEnabled="{Binding ., Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=IItemGroupViewModel}">  -->
                        <MenuItem
                            Command="{Binding IncreaseAddressCommand}"
                            Header="{lex:Loc IncreaseAddress}"
                            IsEnabled="{Binding ., Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=IItemGroupViewModel}" />
                        <MenuItem
                            Command="{Binding DecreaseAddressCommand}"
                            Header="{lex:Loc DecreaseAddress}"
                            IsEnabled="{Binding ., Converter={StaticResource IsInterfaceImplementedToBoolConverter}, ConverterParameter=IItemGroupViewModel}" />
                    </ContextMenu>
                    <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <b:Interaction.Behaviors>
                    <behaviors:TreeGridBehavior />
                </b:Interaction.Behaviors>
                <ListView.View>
                    <GridView>
                        <GridView.Columns>

                            <GridViewColumn Width="{Binding ElementName=dummywidthName, Path=ActualWidth}" Header="{lex:Loc Name}">

                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton
                                                Grid.Column="0"
                                                Width="13"
                                                Height="13"
                                                Margin="{Binding Level, Converter={StaticResource LevelToMarginConverter}}"
                                                IsEnabled="{Binding IsCheckable}"
                                                Style="{DynamicResource MahApps.Styles.ToggleButton.Circle}"
                                                Tag="{Binding ElementName=ConfigListView, Path=ItemsSource}">
                                                <b:Interaction.Behaviors>
                                                    <behaviors:TreeViewToggleButtonBehavior />
                                                </b:Interaction.Behaviors>
                                            </ToggleButton>
                                            <TextBox
                                                Grid.Column="1"
                                                HorizontalAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                Style="{DynamicResource EditableFieldBoxStyle}"
                                                TabIndex="1"
                                                Text="{Binding Header}" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=dummywidthType, Path=ActualWidth}" Header="{lex:Loc Type}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <lex:LocProxy Name="typeNameProxy" Source="{Binding TypeName}" />
                                            <TextBlock HorizontalAlignment="Stretch" Text="{Binding ElementName=typeNameProxy, Path=Result}" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=dummywidthAdress, Path=ActualWidth}" Header="{lex:Loc Address}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            Style="{DynamicResource EditableFieldBoxStyle}"
                                            TabIndex="1"
                                            Text="{Binding Address, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DisablingNegativeValueConverter}}"
                                            Visibility="{Binding ., Converter={StaticResource IsFormattableToVisibilityConverter}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=dummywidthNumberOfPoints, Path=ActualWidth}" Header="{lex:Loc NumberOfPoints}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox
                                            Style="{DynamicResource EditableNumericFieldStyle}"
                                            TabIndex="1"
                                            Text="{Binding NumberOfPoints, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DisablingNegativeValueConverter}}"
                                            Visibility="{Binding ., Converter={StaticResource IsFormattableToVisibilityConverter}}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=dummywidthFormatting, Path=ActualWidth}" Header="{lex:Loc Formatting}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            HorizontalAlignment="Stretch"
                                            Orientation="Horizontal"
                                            Visibility="{Binding ., Converter={StaticResource IsFormattableToVisibilityConverter}}">
                                            <lex:LocProxy Name="formatterProxy" Source="{Binding FormatterParametersViewModel.RelatedUshortsFormatterViewModel.StrongName, TargetNullValue=NotSet}" />
                                            <TextBlock Margin="3" Text="{Binding ElementName=formatterProxy, Path=Result}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="{Binding ElementName=dummywidthMeasureUnit, Path=ActualWidth}" Header="{lex:Loc MeasureUnit}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Visibility="{Binding ., Converter={StaticResource IsFormattableToVisibilityConverter}}">
                                            <TextBox
                                                Style="{DynamicResource EditableFieldBoxStyle}"
                                                TabIndex="1"
                                                Text="{Binding MeasureUnit}"
                                                Visibility="{Binding IsMeasureUnitEnabled, Converter={converter:BoolToVisConverter}}" />
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Width="{Binding ElementName=dummywidthRange, Path=ActualWidth}" Header="{lex:Loc Range}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid Visibility="{Binding ., Converter={StaticResource IsFormattableToVisibilityConverter}}">
                                            <Grid Visibility="{Binding IsRangeEnabled, Converter={converter:BoolToVisConverter}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock
                                                    Grid.Column="0"
                                                    Width="auto"
                                                    VerticalAlignment="Center"
                                                    FontSize="12"
                                                    Text="[" />
                                                <TextBox
                                                    Grid.Column="1"
                                                    HorizontalAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Style="{DynamicResource EditableFieldBoxStyle}"
                                                    TabIndex="1"
                                                    Text="{Binding RangeViewModel.RangeFrom, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBlock
                                                    Grid.Column="2"
                                                    VerticalAlignment="Center"
                                                    FontSize="12"
                                                    FontWeight="Bold"
                                                    Text=":" />
                                                <TextBox
                                                    Grid.Column="3"
                                                    HorizontalAlignment="Center"
                                                    Style="{DynamicResource EditableFieldBoxStyle}"
                                                    TabIndex="1"
                                                    Text="{Binding RangeViewModel.RangeTo, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBlock
                                                    Grid.Column="4"
                                                    VerticalAlignment="Center"
                                                    FontSize="12"
                                                    FontWeight="Bold"
                                                    Text="]" />
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Width="{Binding ElementName=dummywidthTableViewAllowed, Path=ActualWidth}" Header="{lex:Loc Table}">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding IsTableViewAllowed}" Visibility="{Binding ., Converter={StaticResource IsInterfaceImplementedToVisibilityConverter}, ConverterParameter=IConfigurationGroupEditorViewModel}" />
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView.Columns>
                    </GridView>
                </ListView.View>

            </ListView>
        </Grid>
    </Grid>

</UserControl>