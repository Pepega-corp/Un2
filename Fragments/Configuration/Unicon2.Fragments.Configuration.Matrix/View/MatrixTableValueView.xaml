<UserControl
    x:Class="Unicon2.Fragments.Configuration.Matrix.View.MatrixTableValueView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:behaviors="clr-namespace:Unicon2.SharedResources.Behaviors;assembly=Unicon2.SharedResources"
    xmlns:behaviors1="clr-namespace:Unicon2.Fragments.Configuration.Behaviors;assembly=Unicon2.Fragments.Configuration"
    xmlns:converters="clr-namespace:Unicon2.Fragments.Configuration.Converters;assembly=Unicon2.Fragments.Configuration"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dataTemplateSelectors="clr-namespace:Unicon2.SharedResources.DataTemplateSelectors;assembly=Unicon2.SharedResources"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Unicon2.Fragments.Configuration.Matrix.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="300"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:BoolToBorderColorConverter x:Key="BoolToBorderColorConverter" />
    </UserControl.Resources>
    <Grid Visibility="{Binding IsTableView, FallbackValue=Collapsed, TargetNullValue=Collapsed, Converter={StaticResource BoolToVisConverter}}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="150" />
            <ColumnDefinition Width="2" />
            <ColumnDefinition Width="*" MinWidth="150" />
        </Grid.ColumnDefinitions>
        <Border
            Grid.Column="0"
            BorderBrush="Black"
            BorderThickness="1">
            <Grid
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                DataContext="{Binding .}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Text="{lex:Loc DeviceData}" />
                <DataGrid
                    Grid.Row="1"
                    Margin="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    AutoGenerateColumns="False"
                    CanUserAddRows="False">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="TargetUpdated">
                            <b:InvokeCommandAction Command="{Binding DeviceValue.MatrixUpdatedCommand}" />
                        </b:EventTrigger>
                        <b:EventTrigger EventName="SourceUpdated">
                            <b:InvokeCommandAction Command="{Binding DeviceValue.MatrixUpdatedCommand}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <b:Interaction.Behaviors>
                        <behaviors:BubbleScrollBehavior />
                        <behaviors:DynamicColumnsDataGridBehavior IsTransponed="{Binding ElementName=IsTransponedCheckBox, Path=IsChecked}" RowValues="{Binding DeviceValue.Table}" />
                    </b:Interaction.Behaviors>
                </DataGrid>

                <CheckBox
                    Name="IsTransponedCheckBox"
                    Grid.Row="2"
                    Margin="5"
                    HorizontalAlignment="Left"
                    Content="{lex:Loc Transpone}"
                    IsChecked="True" />
            </Grid>
        </Border>

        <GridSplitter
            Grid.Column="1"
            Width="2"
            HorizontalAlignment="Center"
            VerticalAlignment="Stretch" />

        <Border
            Grid.Column="2"
            BorderBrush="Black"
            BorderThickness="1">
            <Grid
                Height="Auto"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                DataContext="{Binding .}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Text="{lex:Loc LocalData}" />
                <Border
                    Grid.Row="1"
                    BorderBrush="{Binding LocalValue.IsFormattedValueChanged, Converter={StaticResource BoolToBorderColorConverter}, FallbackValue=Transparent}"
                    BorderThickness="1">
                    <DataGrid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        AutoGenerateColumns="False"
                        CanUserAddRows="False">
                        <b:Interaction.Triggers>
                            <b:EventTrigger EventName="TargetUpdated">
                                <b:InvokeCommandAction Command="{Binding LocalValue.MatrixUpdatedCommand}" />
                            </b:EventTrigger>
                            <b:EventTrigger EventName="SourceUpdated">
                                <b:InvokeCommandAction Command="{Binding LocalValue.MatrixUpdatedCommand}" />
                            </b:EventTrigger>
                        </b:Interaction.Triggers>
                        <b:Interaction.Behaviors>
                            <behaviors:BubbleScrollBehavior />
                            <behaviors:DynamicColumnsDataGridBehavior IsTransponed="{Binding ElementName=IsTransponedCheckBoxLocalValue, Path=IsChecked}" RowValues="{Binding LocalValue.Table}" />
                        </b:Interaction.Behaviors>
                    </DataGrid>
                </Border>
                <CheckBox
                    Name="IsTransponedCheckBoxLocalValue"
                    Grid.Row="2"
                    Margin="5"
                    HorizontalAlignment="Left"
                    Content="{lex:Loc Transpone}"
                    IsChecked="True" />
            </Grid>
        </Border>
    </Grid>
</UserControl>