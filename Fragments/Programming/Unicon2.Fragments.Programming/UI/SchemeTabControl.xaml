<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Unicon2.Fragments.Programming.Behaviors"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:other="clr-namespace:Unicon2.Fragments.Programming.Other"
    xmlns:viewModels="clr-namespace:Unicon2.Fragments.Programming.ViewModels">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />
        <!--  Ресурсы, в которых описаны DataTemplate всех элементов, как они будут отображаться на Canvas  -->
        <ResourceDictionary Source="../Views/Connection/Connection.xaml" />
        <ResourceDictionary Source="../Views/Connection/Connector.xaml" />
        <ResourceDictionary Source="ElementsResources/InputView.xaml" />
        <ResourceDictionary Source="ElementsResources/OutputView.xaml" />
        <ResourceDictionary Source="ElementsResources/Inversion.xaml" />
        <ResourceDictionary Source="ElementsResources/SimpleLogicSchemeElement.xaml" />
        <ResourceDictionary Source="ElementsResources/AlarmJournalView.xaml" />
        <ResourceDictionary Source="ElementsResources/SystemJournalView.xaml" />
        <ResourceDictionary Source="ElementsResources/Timer.xaml" />
        <ResourceDictionary Source="ElementsResources/TriggerElement.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  TAB CONTROL STYLE  -->
    <Style x:Key="SchemeTabControlStyle" TargetType="{x:Type other:TabControlEx}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            Name="HeaderPanel"
                            Grid.Row="0"
                            Margin="0,0,4,-1"
                            Panel.ZIndex="1"
                            Background="Transparent"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            Name="Border"
                            Grid.Row="1"
                            BorderBrush="{DynamicResource BorderMediumBrush}"
                            BorderThickness="1"
                            CornerRadius="2"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <Grid Name="PART_ItemsHolder" Margin="4" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type viewModels:SchemeTabViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ToolBar Grid.Row="0">
                            <Button
                                Command="{Binding ZoomIncrementCommand}"
                                Style="{DynamicResource ToolButtonStyle}"
                                ToolTip="Увеличить масштаб"
                                ToolTipService.InitialShowDelay="1000"
                                ToolTipService.ShowDuration="2000">
                                <Button.Content>
                                    <TextBlock
                                        FontSize="14"
                                        FontWeight="ExtraBold"
                                        Text="+" />
                                </Button.Content>
                            </Button>
                            <Button
                                Command="{Binding ZoomDecrementCommand}"
                                Style="{DynamicResource ToolButtonStyle}"
                                ToolTip="Уменьшить масштаб"
                                ToolTipService.InitialShowDelay="1000"
                                ToolTipService.ShowDuration="2000">
                                <Button.Content>
                                    <TextBlock
                                        FontSize="14"
                                        FontWeight="ExtraBold"
                                        Text="-" />
                                </Button.Content>
                            </Button>
                            <Border
                                Margin="3,0,0,0"
                                BorderBrush="LightGray"
                                BorderThickness="1">
                                <TextBlock
                                    Margin="5"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Text="{Binding ScaleStr}"
                                    ToolTip="Текущий масштаб"
                                    ToolTipService.InitialShowDelay="1000"
                                    ToolTipService.ShowDuration="2000" />
                            </Border>
                            <Separator Width="2" Background="Gray" />
                            <Button
                                Command="{Binding DeleteCommand}"
                                Style="{DynamicResource DelButtonStyle}"
                                ToolTip="Удалить"
                                ToolTipService.InitialShowDelay="1000"
                                ToolTipService.ShowDuration="2000" />
                        </ToolBar>
                        <Border
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            BorderBrush="{DynamicResource BorderMediumBrush}"
                            BorderThickness="1">
                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                <Grid Name="OuterBorder">
                                    <!--  Для того,чтобы отображать на схеме все существующие элементы, используется ItemsControl, итемы которого размещены на Canvas  -->
                                    <!--  Это позволяет использовать привязку коллекции из базовых VM элементов к колекции визуально отображаемых элементов на Canvas  -->
                                    <ItemsControl Name="LogicSchemeCanvas" ItemsSource="{Binding ElementCollection}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas
                                                    Name="DesignerCanvas"
                                                    Width="{Binding SchemeWidth}"
                                                    Height="{Binding SchemeHeight}"
                                                    AllowDrop="True"
                                                    Background="White"
                                                    SnapsToDevicePixels="True">
                                                    <i:Interaction.Behaviors>
                                                        <behaviors:DesignerCanvasBehavior />
                                                    </i:Interaction.Behaviors>
                                                </Canvas>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemContainerStyle>
                                            <!--  привязка расположения контейнера элемента к его координатам во VM  -->
                                            <Style>
                                                <Setter Property="Canvas.Left" Value="{Binding X}" />
                                                <Setter Property="Canvas.Top" Value="{Binding Y}" />
                                            </Style>
                                        </ItemsControl.ItemContainerStyle>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Name="Place">
                                                    <ContentPresenter x:Name="Presenter" Content="{Binding}" />
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                                        <Setter TargetName="Place" Property="ZIndex" Value="100" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLogicStarted}" Value="True">
                            <Setter TargetName="LogicSchemeCanvas" Property="IsHitTestVisible" Value="False" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type viewModels:SchemeTabViewModel}">
                    <VirtualizingStackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding SchemeName}" />
                        <Button
                            Margin="5,0,0,0"
                            Command="{Binding CloseTabCommand}"
                            Style="{DynamicResource CloseButtonStyle}" />
                    </VirtualizingStackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  CLOSE BUTTON  -->
    <Style x:Key="CloseButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            Name="Border"
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            CornerRadius="7.5" />
                        <Path
                            Name="Cross"
                            Margin="2.5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M5,0.5 C5.2761424,0.5 5.5,0.94771522 5.5,1.5 L5.5,4.5 8.5,4.5 C9.0522847,4.5 9.5,4.7238574 9.5,5 9.5,5.2761426 9.0522847,5.5 8.5,5.5 L5.5,5.5 5.5,8.5 C5.5,9.0522852 5.2761424,9.5 5,9.5 4.7238576,9.5 4.5,9.0522852 4.5,8.5 L4.5,5.5 1.5,5.5 C0.94771528,5.5 0.5,5.2761426 0.5,5 0.5,4.7238574 0.94771528,4.5 1.5,4.5 L4.5,4.5 4.5,1.5 C4.5,0.94771522 4.7238576,0.5 5,0.5 z"
                            RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="45" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                            <Path.Stroke>
                                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="1,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGray" />
                                    <GradientStop Offset="1" Color="Gray" />
                                </LinearGradientBrush>
                            </Path.Stroke>
                            <Path.Fill>
                                <LinearGradientBrush MappingMode="RelativeToBoundingBox" StartPoint="1,0" EndPoint="0,1">
                                    <GradientStop Color="DarkGray" />
                                    <GradientStop Offset="1" Color="Gray" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource RedGradientBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#585858" />
                            <Setter TargetName="Cross" Property="Stroke" Value="White" />
                            <Setter TargetName="Cross" Property="Fill" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DarkRedGradientBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TAB ITEM  -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid Name="Root">
                        <Border
                            Name="Border"
                            Margin="0,0,-4,0"
                            BorderBrush="{DynamicResource BorderMediumBrush}"
                            BorderThickness="1"
                            CornerRadius="2,12,0,0">
                            <ContentPresenter
                                Name="ContentSite"
                                Margin="12,2,12,2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectedTabItemGradientBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource UnselectedTabItemGradientBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource MouseOverTabItemGradientBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            Name="BackgroundBorder"
                            Width="25"
                            Height="25"
                            Background="{DynamicResource CommonZoomButtonBrush}"
                            BorderBrush="DodgerBlue"
                            BorderThickness="0.5"
                            CornerRadius="5" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Blue" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource PressedZoomButtonBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DelButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            Name="BackgroundBorder"
                            Width="25"
                            Height="25"
                            Background="{DynamicResource CommonZoomButtonBrush}"
                            BorderBrush="DodgerBlue"
                            BorderThickness="0.5"
                            CornerRadius="5" />
                        <Image
                            Name="DelImage"
                            Margin="3"
                            Source="../Resources/Delete.png"
                            Stretch="Fill" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DelImage" Property="Source" Value="../Resources/DeleteUnavalible.png" />
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="Blue" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource PressedZoomButtonBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>