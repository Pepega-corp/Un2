<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Unicon2.Fragments.Programming.Behaviors"
    xmlns:elementViewModels1="clr-namespace:Unicon2.Fragments.Programming.ViewModels.ElementViewModels"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:selectors="clr-namespace:Unicon2.Fragments.Programming.TemplateSelectors">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="VerticalExpander.xaml" />
        <!--  Ресурсы, в которых описаны DataTemplate всех элементов, как они будут выглядеть в списках  -->
        <ResourceDictionary Source="ElementsLibraryResources/InputLibraryElement.xaml" />
        <ResourceDictionary Source="ElementsLibraryResources/OutputLibraryElement.xaml" />
        <ResourceDictionary Source="ElementsLibraryResources/InversionLibraryElement.xaml" />
        <ResourceDictionary Source="ElementsLibraryResources/SimpleLogicElement.xaml" />
        <ResourceDictionary Source="ElementsLibraryResources/TimerLibraryElement.xaml" />
        <ResourceDictionary Source="ElementsLibraryResources/TriggerLibraryElement.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  Селектор шаблонов DataTemplate  -->
    <selectors:ElementsViewModelSelector
        x:Key="LibrarySelector"
        Input="{StaticResource InputLibraryElement}"
        Inversion="{StaticResource InversionLibraryElement}"
        Output="{StaticResource OutputLibraryElement}"
        SimpleLogic="{StaticResource SimpleLogicLibrary}"
        Timer="{StaticResource TimerLibraryElement}"
        Trigger="{StaticResource TriggerLibraryElement}" />

    <ControlTemplate x:Key="RightExpanderToggleButton" TargetType="ToggleButton">
        <Border
            Name="Border"
            Background="{StaticResource MahApps.Brushes.Highlight}"
            BorderBrush="{StaticResource MahApps.Brushes.Accent}"
            BorderThickness="0">
            <Path
                Name="Arrow"
                Margin="3,0,3,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 8 0 L 0 4 L 8 8 Z"
                Fill="{StaticResource LightBrush}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MahApps.Brushes.Accent}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MahApps.Brushes.Accent4}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 8 4 L 0 8 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="LogicItemsListStyle" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type elementViewModels1:LogicElementViewModel}">
                    <Grid>
                        <Rectangle
                            Name="Border"
                            Height="50"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Fill="Transparent"
                            IsHitTestVisible="True"
                            StrokeDashArray="2,2"
                            StrokeThickness="1"
                            ToolTip="{Binding Description}"
                            ToolTipService.InitialShowDelay="1000"
                            ToolTipService.ShowDuration="3000">
                            <i:Interaction.Behaviors>
                                <behaviors:ElementsLibraryBehavior />
                            </i:Interaction.Behaviors>
                        </Rectangle>
                        <ContentControl
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{Binding}"
                            ContentTemplateSelector="{StaticResource LibrarySelector}"
                            IsHitTestVisible="False" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="Black" />
                        </Trigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightBorderExpander" TargetType="Expander">
        <Setter Property="FontFamily" Value="SegoeUI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Name="ContentColumn" Width="*" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton
                            Grid.Row="0"
                            Grid.RowSpan="2"
                            Grid.Column="0"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            OverridesDefaultStyle="True"
                            Template="{StaticResource RightExpanderToggleButton}" />
                        <Border
                            Name="Border"
                            Grid.Row="0"
                            Grid.Column="1"
                            Background="{StaticResource MahApps.Brushes.Accent}"
                            BorderBrush="{StaticResource MahApps.Brushes.Accent2}">
                            <ContentPresenter
                                Name="HeaderText"
                                Margin="4"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                        <Border
                            Grid.Row="1"
                            Grid.Column="1"
                            BorderBrush="{StaticResource MahApps.Brushes.Accent2}"
                            BorderThickness="1">
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <ItemsControl ItemsSource="{Binding ElementsLibrary}" Style="{StaticResource LogicItemsListStyle}" />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentColumn" Property="Width" Value="{Binding ElementName=Content, Path=DesiredSize}" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ContentColumn" Property="Width" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>